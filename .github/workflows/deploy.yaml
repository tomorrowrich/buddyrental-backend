name: Preview Docker Image on deploys.app

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      sha:
        description: 'SHA of the commit to preview'
        required: false

jobs:
  build:
    concurrency:
      group: preview-build-${{ github.ref }}
      cancel-in-progress: true
    name: Build and push Docker preview image
    runs-on: ubuntu-latest
    environment: Staging
    outputs:
      build-image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Metadata action
        uses: docker/metadata-action@v4.6.0
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value={{sha}}-${{ github.actor }}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.1.1
        id: build
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    concurrency:
      group: preview-deploy-${{ github.ref }}
      cancel-in-progress: true
    name: Deploy preview to deploys.app
    needs: build
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # - name: Create Render service preview
      #   uses: fjogeleit/http-request-action@v1
      #   id: trigger-preview
      #   with:
      #     url: 'https://api.render.com/v1/services/${{ secrets.RENDER_PREVIEW_SERVICE_ID }}/preview'
      #     method: 'POST'
      #     bearerToken: ${{ secrets.RENDER_API_KEY }}
      #     timeout: 15000
      #     contentType: 'application/json'
      #     data: '{"imagePath": "ghcr.io/${{ github.repository }}@${{ needs.build.outputs.build-image-digest }}","plan": "free","name": "buddyrental-backend-${{ github.sha }}"}'

      - name: Add Deploy Status to PR
        id: deploy-status
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.DEPLOY_TOKEN }}
          message: |
            ### <span aria-hidden="true">ðŸš€</span> Preview deployment is in progress...

            The preview deployment is being prepared. This may take a few minutes. Please wait for the deployment to complete before checking the preview URL.
            | Name | Resource |
            |:-:|------------------------|
            |<span aria-hidden="true">ðŸ”¨</span> Latest Commit | ${{ github.sha }} |
            |<span aria-hidden="true">ðŸ“¦</span> Image Digest | ${{ needs.build.outputs.build-image-digest }} |

      # I know there is a proper action for this, but it doesn't provide a way to configure ENV
      - name: Call Deploys.app Deploy API
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.deploys.app/deployment.deploy'
          method: 'POST'
          username: ${{ secrets.DEPLOYS_AUTH_USER }}
          password: ${{ secrets.DEPLOYS_AUTH_PASS }}
          contentType: 'application/json'
          data: |
            {
              "location": "gke.cluster-rcf2",
              "project": "buddyrental-api",
              "name": "preview-${{ github.event.number }}",
              "image": "ghcr.io/${{ github.repository }}@${{ needs.build.outputs.build-image-digest }}",
              "env": {
                "DATABASE_URL": "${{ secrets.DATABASE_URL }}&schema=preview-${{ github.event.number }}",
                "DIRECT_URL": "${{ secrets.DIRECT_URL }}&schema=preview-${{ github.event.number }}",
                "NODE_ENV": "preview",
              }
            }

      - name: Install Deploys CLI
        run: scripts/install-deploys-cli.sh
        env:
          DEPLOYS_AUTH_USER: ${{ secrets.DEPLOYS_AUTH_USER }}
          DEPLOYS_AUTH_PASS: ${{ secrets.DEPLOYS_AUTH_PASS }}

      - name: Deploy to deploys.app
        run: |
          deploys get me

      # - name: Output Render service URL
      #   uses: mshick/add-pr-comment@v2
      #   with:
      #     message: |
      #       ðŸš€ Preview deployment is ready!
      #       URL: ${{ fromJson(steps.trigger-preview.outputs.response).service.serviceDetails.url }}
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     allow-repeats: true
