# Skip all pre-commit tasks if a merge commit is in progress
if [ -f ".git/MERGE_HEAD" ]; then
  echo "Merge commit detected. Skipping pre-commit checks."
  exit 0
fi

# Get staged files once for reuse
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR)

echo "✨ Formatting code..."
[ -n "$STAGED_FILES" ] && pnpm exec prettier $STAGED_FILES --write --ignore-unknown

# Run Prisma format only if any prisma file is staged
echo "$STAGED_FILES" | grep -q '^prisma/' && {
  echo "🔧 Running Prisma format..."
  pnpm exec prisma format
}

echo "🔍 Running linter..."
# Lint only staged .ts/.js files
TS_JS_FILES=$(echo "$STAGED_FILES" | grep -E '\.(ts|js)$' || true)
if [ -n "$TS_JS_FILES" ]; then
  echo "$TS_JS_FILES" | xargs pnpm eslint --fix
else
  echo "No JS/TS files to lint."
fi

# Update index for formatted/linted files
git update-index --again

# Prisma checks: Only run if any file in prisma folder was staged
if echo "$STAGED_FILES" | grep -q '^prisma/'; then
  echo "🔍 Running Prisma pre-commit checks..."
  SCHEMA_PATH="prisma/schema.prisma"

  echo "📦 Generating Prisma client..."
  pnpm prisma generate

  echo "📊 Checking for pending Prisma migrations..."
  if ! pnpm prisma migrate status; then
    echo "❌ Error: Pending Prisma migrations require update."
    exit 1
  fi

  echo "🔄 Checking for schema changes..."
  if ! pnpm prisma migrate diff --from-schema-datamodel "$SCHEMA_PATH" --to-schema-datasource "$SCHEMA_PATH" --exit-code; then
    echo "❌ Error: Uncommitted schema.prisma changes detected."
    exit 1
  fi
fi

if [ -n "$TS_JS_FILES" ]; then
  echo "🏃 Running tests for changed JS/TS files..."
  echo "$TS_JS_FILES" | xargs pnpm test -- --findRelatedTests
else
  echo "No testable JS/TS files changed."
fi

echo "✅ Pre-commit checks passed!"
